function D = net_inv_datareg(D, mrifiducials)
% No template
% Using headshape generated by the individual MRI image
% 
% revised by QL
% 10.02.2016
%


[D, val] = spm_eeg_inv_check(D);
val = 1;

meegfid = D.fiducials;  % revised by QL, 10.02.2016


[isMem, selection] = ismember(mrifiducials.fid.label, meegfid.fid.label);  % fixed by QL, 20.07.2015
meegfid.fid.pnt   = meegfid.fid.pnt(selection, :);
meegfid.fid.label = meegfid.fid.label(selection);


M1 = [];

S =[];
S.sourcefid = meegfid;
S.targetfid = mrifiducials;
S.template  = 0;    % fix, 21.07.2015 , rigid coregistration
S.useheadshape = 1; % disable the head shape; 20.07.2015


ind = 1;
D.inv{val}.datareg = struct([]);

if isempty(M1)
%     S.template = (D.inv{val}.mesh.template | S.useheadshape); % removed
%     by QL, 21.07.2015
    M1 = spm_eeg_inv_datareg(S);
end

D.inv{val}.datareg(ind).sensors = ft_transform_sens(M1, D.sensors('EEG'));
D.inv{val}.datareg(ind).fid_eeg = ft_transform_headshape(M1, S.sourcefid);
D.inv{val}.datareg(ind).fid_mri = S.targetfid;
% D.inv{val}.datareg(ind).toMNI   = D.inv{val}.mesh.Affine; 
% D.inv{val}.datareg(ind).fromMNI = inv(D.inv{val}.mesh.Affine);
D.inv{val}.datareg(ind).modality = 'EEG';



