function de_noise_EEG = net_eliminate_art(x,fs,n,bad_vect)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%?????????? ????????????EEG??????????????????????????????????????????????????????
% x-> input singal with EOG
% fs->????????
% n-> ????????????????1,2,3. ????????????????????????,??????2
% p-> ??????????????????p??[0,1];0????????????????????1??????????????????????????????????????
%% @(#)$Id: eliminate_EOG.m 2010.6,18 Yanbing Qi Exp $
%% @(#)$Id: eliminate_EOG.m 2010.7,16 Yanbing Qi Exp $
%% @(#)$Id: eliminate_EOG.m 2010.12,23 11:52:23 Yanbing Qi Exp $
%$%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% Check inputs
if nargin < 3
    n=2;
    if nargin < 2
        error('MATLAB:eliminate_EMG:NotEnoughInputs',...
            'Not enough input arguments.  See eliminate_EMG.');
    end
end


% check input signal
[a_1,b_1]=size(x);
if b_1==1 && b_1<a_1
    x=x';
end
if a_1~=1 && b_1~=1
    error('MATLAB:eliminate_EMG:Inputmatrixisnotreliable',...
              'Input matrix is not a one - dimensional array.  See eliminate_EMG.');
end
de_noise_EEG=x;
mean_x=sum(abs(x))/length(x);  %??????????
std_variance=std(x);           %????????????
% mark the bad_samples zone

if exist('bad_vect')==0
[bad_vect,count]=net_mark_sig(x,fs,0);
end


Con_EEG=bad_vect.*x;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%delect EOG
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

threshold(1)=abs(std_variance-0.5*mean_x);
threshold(2)=abs(1.5*std_variance-0.5*mean_x);
threshold(3)=abs(2.5*std_variance-mean_x);
threshold(4)=abs(3.5*std_variance-mean_x);
threshold(5)=abs(4.5*std_variance-mean_x);
THTR=threshold(n);
N=0;
sum_1=0;
for i=1:length(Con_EEG)
    if Con_EEG(i)~=0
        N=N+1;
        sum_1=sum_1+abs(Con_EEG(1,i));
    end
end
mean_E=sum_1/N;  %The mean of contaminated EEG 

if mean_E < 3*mean_x
    XC=wdencmp('gbl',Con_EEG,'db7',7,THTR,'h',0);
else
    XC=wdencmp('gbl',Con_EEG,'db7',7,THTR,'s',0);
end
de_noise_EEG=x-XC;
%%%%%%%%%%%%%%%%
